'use client'

import React from 'react'
import { TodayResponse } from '@/lib/types'

interface RationaleSectionProps {
  rationale: NonNullable<TodayResponse['pick']>['rationale'] | null | undefined
  isLoading?: boolean
}

export default function RationaleSection({ rationale, isLoading }: RationaleSectionProps) {
  if (isLoading) {
    return (
      <div className="bg-white rounded-lg shadow-lg p-6 border border-gray-200">
        <div className="animate-pulse">
          <div className="h-6 bg-gray-200 rounded mb-4"></div>
          <div className="space-y-3">
            <div className="h-4 bg-gray-200 rounded"></div>
            <div className="h-4 bg-gray-200 rounded"></div>
            <div className="h-4 bg-gray-200 rounded w-3/4"></div>
          </div>
          <div className="mt-6">
            <div className="h-5 bg-gray-200 rounded mb-3"></div>
            <div className="space-y-2">
              <div className="h-4 bg-gray-200 rounded w-5/6"></div>
              <div className="h-4 bg-gray-200 rounded w-4/6"></div>
              <div className="h-4 bg-gray-200 rounded w-3/6"></div>
            </div>
          </div>
        </div>
      </div>
    )
  }

  if (!rationale) {
    return (
      <div className="bg-white rounded-lg shadow-lg p-6 border border-gray-200 text-center">
        <div className="text-gray-500 mb-4">
          <svg className="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
          </svg>
        </div>
        <h3 className="text-lg font-semibold text-gray-700 mb-2">No Analysis Available</h3>
        <p className="text-gray-500">ML reasoning is not available for this pick.</p>
      </div>
    )
  }

  return (
    <div className="bg-white rounded-lg shadow-lg p-6 border border-gray-200">
      <div className="flex items-center mb-4">
        <div className="bg-blue-100 p-2 rounded-lg mr-3">
          <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
          </svg>
        </div>
        <h2 className="text-xl font-bold text-gray-900">AI Analysis</h2>
      </div>

      {rationale.reasoning && (
        <div className="mb-6">
          <h3 className="text-sm font-medium text-gray-700 mb-3">Reasoning</h3>
          <div className="bg-gray-50 rounded-lg p-4">
            <p className="text-gray-700 leading-relaxed">{rationale.reasoning}</p>
          </div>
        </div>
      )}

      {rationale.topFactors && rationale.topFactors.length > 0 && (
        <div>
          <h3 className="text-sm font-medium text-gray-700 mb-3">Key Factors</h3>
          <div className="space-y-2">
            {rationale.topFactors.map((factor, index) => (
              <div key={index} className="flex items-start">
                <div className="flex-shrink-0 w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-xs font-medium mr-3 mt-0.5">
                  {index + 1}
                </div>
                <div className="flex-1">
                  <p className="text-sm text-gray-700">{factor}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {(!rationale.topFactors || rationale.topFactors.length === 0) && !rationale.reasoning && (
        <div className="text-center text-gray-500">
          <p>Detailed analysis is not available for this pick.</p>
        </div>
      )}

      <div className="mt-6 pt-4 border-t border-gray-200">
        <div className="flex items-center text-xs text-gray-500">
          <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Analysis generated by machine learning algorithms
        </div>
      </div>
    </div>
  )
}